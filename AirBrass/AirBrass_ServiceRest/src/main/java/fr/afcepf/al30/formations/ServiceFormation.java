
package fr.afcepf.al30.formations;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.datatype.XMLGregorianCalendar;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebService(name = "serviceFormation", targetNamespace = "http://formations.al30.afcepf.fr")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface ServiceFormation {


    /**
     * 
     * @return
     *     returns java.util.List<fr.afcepf.al30.formations.FormationDTO>
     */
    @WebMethod
    @WebResult(name = "returnGetAllFormations", targetNamespace = "")
    @RequestWrapper(localName = "getAllFormations", targetNamespace = "http://formations.al30.afcepf.fr", className = "fr.afcepf.al30.formations.GetAllFormations")
    @ResponseWrapper(localName = "getAllFormationsResponse", targetNamespace = "http://formations.al30.afcepf.fr", className = "fr.afcepf.al30.formations.GetAllFormationsResponse")
    public List<FormationDTO> getAllFormations();

    /**
     * 
     * @param dateSelectionnee
     * @param seulementDispos
     * @return
     *     returns java.util.List<fr.afcepf.al30.formations.FormationDTO>
     */
    @WebMethod
    @WebResult(name = "returnGetFormationsByDate", targetNamespace = "")
    @RequestWrapper(localName = "getFormationsByDate", targetNamespace = "http://formations.al30.afcepf.fr", className = "fr.afcepf.al30.formations.GetFormationsByDate")
    @ResponseWrapper(localName = "getFormationsByDateResponse", targetNamespace = "http://formations.al30.afcepf.fr", className = "fr.afcepf.al30.formations.GetFormationsByDateResponse")
    public List<FormationDTO> getFormationsByDate(
        @WebParam(name = "dateSelectionnee", targetNamespace = "")
        XMLGregorianCalendar dateSelectionnee,
        @WebParam(name = "seulementDispos", targetNamespace = "")
        boolean seulementDispos);

    /**
     * 
     * @param formation
     * @return
     *     returns fr.afcepf.al30.formations.FormationDTO
     */
    @WebMethod
    @WebResult(name = "returnReservationReussie", targetNamespace = "")
    @RequestWrapper(localName = "reserverFormation", targetNamespace = "http://formations.al30.afcepf.fr", className = "fr.afcepf.al30.formations.ReserverFormation")
    @ResponseWrapper(localName = "reserverFormationResponse", targetNamespace = "http://formations.al30.afcepf.fr", className = "fr.afcepf.al30.formations.ReserverFormationResponse")
    public FormationDTO reserverFormation(
        @WebParam(name = "formation", targetNamespace = "")
        FormationDTO formation);

    /**
     * 
     * @param formation
     * @param seulementDispos
     * @return
     *     returns java.util.List<fr.afcepf.al30.formations.FormationDTO>
     */
    @WebMethod
    @WebResult(name = "returnGetFormations", targetNamespace = "")
    @RequestWrapper(localName = "getFormations", targetNamespace = "http://formations.al30.afcepf.fr", className = "fr.afcepf.al30.formations.GetFormations")
    @ResponseWrapper(localName = "getFormationsResponse", targetNamespace = "http://formations.al30.afcepf.fr", className = "fr.afcepf.al30.formations.GetFormationsResponse")
    public List<FormationDTO> getFormations(
        @WebParam(name = "formation", targetNamespace = "")
        Formation formation,
        @WebParam(name = "seulementDispos", targetNamespace = "")
        boolean seulementDispos);

    /**
     * 
     * @param formation
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(name = "returnVerifierDispoFormation", targetNamespace = "")
    @RequestWrapper(localName = "verifierDispoFormation", targetNamespace = "http://formations.al30.afcepf.fr", className = "fr.afcepf.al30.formations.VerifierDispoFormation")
    @ResponseWrapper(localName = "verifierDispoFormationResponse", targetNamespace = "http://formations.al30.afcepf.fr", className = "fr.afcepf.al30.formations.VerifierDispoFormationResponse")
    public boolean verifierDispoFormation(
        @WebParam(name = "formation", targetNamespace = "")
        Formation formation);

    /**
     * 
     * @param idFormation
     * @return
     *     returns fr.afcepf.al30.formations.FormationDTO
     */
    @WebMethod
    @WebResult(name = "returnGetFormationById", targetNamespace = "")
    @RequestWrapper(localName = "getFormationById", targetNamespace = "http://formations.al30.afcepf.fr", className = "fr.afcepf.al30.formations.GetFormationById")
    @ResponseWrapper(localName = "getFormationByIdResponse", targetNamespace = "http://formations.al30.afcepf.fr", className = "fr.afcepf.al30.formations.GetFormationByIdResponse")
    public FormationDTO getFormationById(
        @WebParam(name = "idFormation", targetNamespace = "")
        Integer idFormation);

    /**
     * 
     * @return
     *     returns java.util.List<fr.afcepf.al30.formations.FormateurDTO>
     */
    @WebMethod
    @WebResult(name = "returnGetAllFormateurs", targetNamespace = "")
    @RequestWrapper(localName = "getAllFormateurs", targetNamespace = "http://formations.al30.afcepf.fr", className = "fr.afcepf.al30.formations.GetAllFormateurs")
    @ResponseWrapper(localName = "getAllFormateursResponse", targetNamespace = "http://formations.al30.afcepf.fr", className = "fr.afcepf.al30.formations.GetAllFormateursResponse")
    public List<FormateurDTO> getAllFormateurs();

}
